# This file is autogenerated by maturin>=v1.9.4,<2.0
# To update, run
#
#    maturin generate-ci github
#
# After all Python versions are installed, the --find-interpreter parameter of maturin build still fails to
# find all Python versions, resulting in some Python versions not being built. Therefore, the -i parameter
# is needed to manually specify Python versions.
#

name: CI

on:
  push:
    branches:
      - main
      - master
    tags:
      - '*'
  pull_request:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  # Setup Python Environments Jobs
  # These jobs will set up the Python environments for the other jobs to use.
  setup-python-linux:
    name: Setup Python Environments (Linux)
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          - runner: ubuntu-latest
            target: x86_64
          - runner: ubuntu-latest
            target: x86
          - runner: ubuntu-latest
            target: aarch64
          - runner: ubuntu-latest
            target: armv7
          - runner: ubuntu-latest
            target: s390x
          - runner: ubuntu-latest
            target: ppc64le
        python-version: [ "3.8", "3.9", "3.10", "3.11", "3.12", "3.13", "3.14", "pypy3.9", "pypy3.10", "pypy3.11" ]
    steps:
      - uses: actions/checkout@v5
      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: ${{ matrix.python-version }}
          allow-prereleases: true

  setup-python-windows:
    name: Setup Python Environments (Windows)
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          - runner: windows-latest
            target: x64 # 64-bit Python interpreter, note that 32-bit Python interpreter is not supported on Windows x86
        # Other Python versions need to be installed separately to build correctly
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]
    steps:
      - uses: actions/checkout@v5
      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: ${{ matrix.python-version }}
          architecture: ${{ matrix.platform.target }}
          allow-prereleases: true

  setup-python-macos:
    name: Setup Python Environments (macOS)
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          - runner: macos-latest
            target: x86_64
          - runner: macos-latest
            target: aarch64
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12", "3.13", "3.14", "pypy3.9", "pypy3.10", "pypy3.11" ]
    steps:
      - uses: actions/checkout@v5
      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: ${{ matrix.python-version }}
          allow-prereleases: true

  # Build Jobs
  # These jobs will build the wheels for all Python versions and upload them as artifacts.
  linux:
    runs-on: ubuntu-latest
    needs: setup-python-linux
    strategy:
      matrix:
        target: [x86_64, x86, aarch64, armv7, s390x, ppc64le]
    steps:
      - uses: actions/checkout@v5

      - name: Build wheels for all Python versions
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: |
            --release
            --out target/wheels
            -i python3.8 python3.9 python3.10 python3.11 python3.12 python3.13 python3.14 pypy3.9 pypy3.10 pypy3.11
          sccache: ${{ !startsWith(github.ref, 'refs/tags/') }}
          manylinux: auto

      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-linux-${{ matrix.target }}
          path: target/wheels

  musllinux:
    runs-on: ubuntu-latest
    needs: setup-python-linux
    strategy:
      matrix:
        target: [x86_64, x86, aarch64, armv7]
    steps:
      - uses: actions/checkout@v5

      - name: Build wheels for all Python versions
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: |
            --release
            --out target/wheels
            -i python3.8 python3.9 python3.10 python3.11 python3.12 python3.13 python3.14 pypy3.9 pypy3.10 pypy3.11
          sccache: ${{ !startsWith(github.ref, 'refs/tags/') }}
          manylinux: musllinux_1_2

      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-musllinux-${{ matrix.target }}
          path: target/wheels

  windows:
    runs-on: ${{ matrix.platform.runner }}
    needs: setup-python-windows
    strategy:
      matrix:
        platform:
          - runner: windows-latest
            target: x64
    steps:
      - uses: actions/checkout@v5

      - name: Install Python3.8、3.14 and multiple PyPy version
        uses: actions/setup-python@v6
        with:
          python-version: |
            3.8
            3.14
            pypy3.9
            pypy3.10
            pypy3.11
          architecture: ${{ matrix.platform.target }}
          allow-prereleases: true

      - name: Set PyPy paths
        shell: pwsh
        run: |
          $PYPY_PATHS = @()
          $versions = @("3.9", "3.10", "3.11")

          foreach ($version in $versions) {
              $command = "pypy$version"
              $pypyCommand = Get-Command $command -ErrorAction SilentlyContinue
              if ($pypyCommand) {
                  $path = "$($pypyCommand.Source)"
                  $PYPY_PATHS += $path
                  Write-Host "Found PyPy$version : $path"
              } else {
                  Write-Host "PyPy$version not found"
              }
          }

          $PYPY_PATHS_STRING = $PYPY_PATHS -join " "
          Write-Host "All PyPy paths: $PYPY_PATHS_STRING"
          echo "PYPY_PATHS=$PYPY_PATHS_STRING" >> $env:GITHUB_ENV

      - name: Build wheels for all Python versions
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: |
            --release
            --out target/wheels
            -i python3.8 python3.9 python3.10 python3.11 python3.12 python3.13 python3.14
            -i ${{ env.PYPY_PATHS }}

          sccache: ${{ !startsWith(github.ref, 'refs/tags/') }}

      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-windows-${{ matrix.platform.target }}
          path: target/wheels


  macos:
    runs-on: ${{ matrix.runner }}
    needs: setup-python-macos
    strategy:
      matrix:
        include:
          - runner: macos-latest
            target: x86_64
          - runner: macos-latest
            target: aarch64
    steps:
      - uses: actions/checkout@v5

      - name: Build wheels for all Python versions
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: |
            --release
            --out target/wheels
            -i python3.8 python3.9 python3.10 python3.11 python3.12 python3.13 python3.14 pypy3.9 pypy3.10 pypy3.11
          sccache: ${{ !startsWith(github.ref, 'refs/tags/') }}

      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-macos-${{ matrix.target }}
          path: target/wheels

  sdist:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - name: Build sdist
        uses: PyO3/maturin-action@v1
        with:
          command: sdist
          args: --out target/wheels
      - name: Upload sdist
        uses: actions/upload-artifact@v4
        with:
          name: wheels-sdist
          path: target/wheels

  release:
    name: Release
    runs-on: ubuntu-latest
    if: ${{ startsWith(github.ref, 'refs/tags/') || github.event_name == 'workflow_dispatch'}}
    needs: [linux, musllinux, windows, macos, sdist]
    permissions:
      # Use to sign the release artifacts
      id-token: write
      # Used to upload release artifacts
      contents: write
      # Used to generate artifact attestation
      attestations: write
    steps:
      - uses: actions/download-artifact@v4
      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v2
        with:
          subject-path: 'wheels-*/*'
      - name: Publish to PyPI
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        uses: PyO3/maturin-action@v1
        env:
          MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
        with:
          command: upload
          args: --non-interactive --skip-existing wheels-*/*
