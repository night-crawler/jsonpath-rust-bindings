name: Cross-platform sanity check

on: [ push ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12", "3.13", "3.14", "pypy3.9", "pypy3.10", "pypy3.11" ]
        include:
          - os: ubuntu-latest
            python-version: "3.14"
            allow-failure: true
          - os: macos-latest
            python-version: "3.14"
            allow-failure: true
          - os: windows-latest
            python-version: "3.14"
            allow-failure: true
    continue-on-error: ${{ matrix.allow-failure || false }}
    steps:
      - uses: actions/checkout@v5
      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: ${{ matrix.python-version }}
          allow-prereleases: true
          cache: pip
          cache-dependency-path: pyproject.toml
      - name: Create virtualenv and install package
        shell: bash
        run: |
          python -m venv env
          if [[ "${{ matrix.python-version }}" == "pypy3.11" ]]; then
            echo "Skipping pip upgrade for PyPy3.11"
          else
            python -m pip install --upgrade pip
          fi
          if [ "$RUNNER_OS" == "Windows" ]; then
            source env/Scripts/activate
          else
            source env/bin/activate
          fi
          pip install -U setuptools wheel maturin pytest virtualenv
          maturin develop --release
      - name: Test
        shell: bash
        run: |
          if [ "$RUNNER_OS" == "Windows" ]; then
            source env/Scripts/activate
          else
            source env/bin/activate
          fi
          python -m pytest
